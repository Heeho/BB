package ru.ltow.bb

import com.badlogic.ashley.core.Entity
import com.badlogic.gdx.graphics.Color
import com.badlogic.gdx.graphics.VertexAttributes
import com.badlogic.gdx.graphics.g2d.Animation
import com.badlogic.gdx.graphics.g2d.TextureAtlas
import com.badlogic.gdx.graphics.g2d.TextureRegion
import com.badlogic.gdx.graphics.g3d.Material
import com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute
import com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute
import com.badlogic.gdx.graphics.g3d.utils.ModelBuilder
import com.badlogic.gdx.utils.Array
import ru.ltow.bb.component.*

class EntityFactory(
  val asys: AnimationSystem
) {
  fun cube(): Entity {
    return Entity().apply {
      add(Model(ModelBuilder().createBox(
        1f, 1f, 1f,
        Material(ColorAttribute.createDiffuse(Color.BLUE), BlendingAttribute()),
        VertexAttributes.Usage.Position.toLong() or VertexAttributes.Usage.Normal.toLong()
      )))
    }
  }

  fun player(): Entity = toad().apply { add(Player(this.getComponent(State::class.java))) }

  fun creature(
    creature: JSON,
    position: Vector3 // generated by Location
  ): Entity
  {
    val a = Animation(asys.packs[creature.name])
    val f = Face()
    val b = Billboard(position,a.frame(AnimationSystem.Face.SE,0f))
    //val h = Health(creature.hp)
    //...
    return Entity().add(a).add(f).add(b)
  }
}
